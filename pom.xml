<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.staatsbibliothek-berlin.hsp</groupId>
    <artifactId>hsp-fo-discovery</artifactId>
    <version>2.24.0</version>
    <packaging>war</packaging>
    <name>hsp-fo-discovery</name>
    <description>Handschriftenportal Front Office Discovery Service</description>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.4</version>
        <relativePath/>
    </parent>

    <properties>
        <commons-collections4.version>4.5.0-M2</commons-collections4.version>
        <commons-text.version>1.12.0</commons-text.version>
        <docker-maven-version>0.43.4</docker-maven-version>
        <hamcrest-optional.version>2.0.0</hamcrest-optional.version>
        <httpcore5.version>5.3</httpcore5.version>
        <!-- do not update, since jackson-databind 2.16.0 is required and spring boot relies on 2.15.3 -->
        <jackson-dataformat-xml.version>2.15.0</jackson-dataformat-xml.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <java.version>21</java.version>
        <jdeb.version>1.10</jdeb.version>
        <jetty-client.version>10.0.20</jetty-client.version>
        <json-path-assert.version>2.9.0</json-path-assert.version>
        <json-smart.version>2.5.1</json-smart.version>
        <json-unit.version>3.4.1</json-unit.version>
        <jsoup.version>1.18.1</jsoup.version>
        <junit-vintage.version>5.10.2</junit-vintage.version>
        <maven.compiler.release>21</maven.compiler.release>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-failsafe-plugin.version>3.5.1</maven-failsafe-plugin.version>
        <maven-release-plugin.version>3.1.1</maven-release-plugin.version>
        <maven-surefire-plugin.version>3.5.1</maven-surefire-plugin.version>
        <rsql-parser.version>2.1.0</rsql-parser.version>
        <!-- override managed version, as the provided version includes several vulnerabilities -->
        <snakeyaml.version>2.0</snakeyaml.version>
        <spring-cloud.version>2023.0.3</spring-cloud.version>
        <solrj.version>9.6.0</solrj.version>
        <springdoc.version>2.6.0</springdoc.version>

        <skipSurefireReport>true</skipSurefireReport>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>${jackson-dataformat-xml.version}</version>
        </dependency>

        <dependency>
            <groupId>cz.jirutka.rsql</groupId>
            <artifactId>rsql-parser</artifactId>
            <version>${rsql-parser.version}</version>
        </dependency>

        <dependency>
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
            <version>${json-smart.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>${commons-text.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>${solrj.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-tcnative-classes</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-json</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.graphql</groupId>
            <artifactId>spring-graphql</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
            <version>${httpcore5.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents.core5</groupId>
            <artifactId>httpcore5</artifactId>
            <version>${httpcore5.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents.core5</groupId>
            <artifactId>httpcore5-reactive</artifactId>
            <version>${httpcore5.version}</version>
        </dependency>

        <!-- START test dependencies -->
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5-fluent</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.npathai</groupId>
            <artifactId>hamcrest-optional</artifactId>
            <version>${hamcrest-optional.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
            <version>${json-path-assert.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.javacrumbs.json-unit</groupId>
            <artifactId>json-unit</artifactId>
            <version>${json-unit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- solr dependencies -->
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-client</artifactId>
            <version>${jetty-client.version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-io</artifactId>
            <version>${jetty-client.version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <version>${jetty-client.version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-http</artifactId>
            <version>${jetty-client.version}</version>
        </dependency>
        <!-- END solr dependencies -->


        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit-vintage.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- END test dependencies -->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.github.npathai</groupId>
                <artifactId>hamcrest-optional</artifactId>
                <version>${hamcrest-optional-version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <profiles>
        <!-- Default profile. -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
                <sign.package>false</sign.package>
                <skipITs>true</skipITs>
            </properties>
        </profile>

        <!-- Profile for the CI server. -->
        <profile>
            <id>integration</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <sign.package>false</sign.package>
                <skipITs>false</skipITs>
                <skipUTs>false</skipUTs>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>add-test-sources</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/integration-test/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-test-resources</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>add-test-resource</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <filtering>true</filtering>
                                            <directory>src/integration-test/resources</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/${project.artifactId}/WEB-INF/lib</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>default-prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>default-report</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>default-check</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <!-- implementation is needed only for Maven 2 -->
                                        <rule implementation="org.jacoco.maven.RuleConfiguration">
                                            <element>BUNDLE</element>
                                            <limits>
                                                <!-- implementation is needed only for Maven 2 -->
                                                <limit implementation="org.jacoco.report.check.Limit">
                                                    <counter>COMPLEXITY</counter>
                                                    <value>COVEREDRATIO</value>
                                                    <minimum>0.00</minimum>
                                                </limit>
                                            </limits>
                                        </rule>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.22.0</version><!--$NO-MVN-MAN-VER$-->
                        <configuration>
                            <excludes>
                                <exclude>**/*IntegrationTestjava</exclude>
                            </excludes>
                            <reportsDirectory>
                                ${project.build.directory}/test-reports
                            </reportsDirectory>
                            <argLine>@{argLine} -Xmx2048M</argLine>
                            <!--suppress MavenModelInspection -->
                            <skipTests>${skipUTs}</skipTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version><!--$NO-MVN-MAN-VER$-->
                        <configuration>
                            <reportsDirectory>${project.build.directory}/test-reports</reportsDirectory>
                            <!--suppress MavenModelInspection -->
                            <skipITs>${skipITs}</skipITs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-tests</id>
                                <configuration>
                                    <testSourceDirectory>src/integration-test/java</testSourceDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>deb</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <sign.package>false</sign.package>
                <maven.javadoc.skip>true</maven.javadoc.skip>
                <maven.site.skip>true</maven.site.skip>
                <skipITs>true</skipITs>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>jdeb</artifactId>
                        <groupId>org.vafer</groupId>
                        <version>${jdeb.version}</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <id>${project.artifactId}</id>
                                <goals>
                                    <goal>jdeb</goal>
                                </goals>
                                <configuration>
                                    <name>Staatsbibliothek zu Berlin Handschriftenportal -
                                        ${project.artifactId}
                                    </name>
                                    <classifier>core</classifier>
                                    <controlDir>${project.basedir}/src/deb/${project.artifactId}
                                    </controlDir>
                                    <deb>
                                        ${project.build.directory}/${project.artifactId}_${project.version}_all.deb
                                    </deb>
                                    <snapshotExpand>true</snapshotExpand>
                                    <!--suppress MavenModelInspection -->
                                    <signPackage>${sign.package}</signPackage>
                                    <signMethod>dpkg-sig</signMethod>
                                    <signRole>builder</signRole>
                                    <dataSet>
                                        <data>
                                            <type>template</type>
                                            <paths>
                                                <path>/etc/SBB/${project.artifactId}</path>
                                                <path>/var/lib/SBB/${project.artifactId}</path>
                                                <path>/data/log/${project.artifactId}</path>
                                                <path>/var/run/SBB/${project.artifactId}</path>
                                            </paths>
                                        </data>
                                        <data>
                                            <src>
                                                ${project.build.directory}/${project.build.finalName}.war
                                            </src>
                                            <type>file</type>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>
                                                    /usr/local/SBB/usr/local/${project.artifactId}
                                                </prefix>
                                                <user>${project.artifactId}</user>
                                                <group>${project.artifactId}</group>
                                                <filemode>755</filemode>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>
                                                ${project.build.directory}/classes/application.yml
                                            </src>
                                            <type>file</type>
                                            <conffile>true</conffile>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/etc/SBB/${project.artifactId}</prefix>
                                                <user>${project.artifactId}</user>
                                                <group>${project.artifactId}</group>
                                                <filemode>644</filemode>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>
                                                ${project.build.directory}/classes/application-dev.yml
                                            </src>
                                            <type>file</type>
                                            <conffile>true</conffile>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/etc/SBB/${project.artifactId}</prefix>
                                                <user>${project.artifactId}</user>
                                                <group>${project.artifactId}</group>
                                                <filemode>644</filemode>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>
                                                ${project.build.directory}/classes/application-prod.yml
                                            </src>
                                            <type>file</type>
                                            <conffile>true</conffile>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/etc/SBB/${project.artifactId}</prefix>
                                                <user>${project.artifactId}</user>
                                                <group>${project.artifactId}</group>
                                                <filemode>644</filemode>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>
                                                ${project.build.directory}/classes/application-stage.yml
                                            </src>
                                            <type>file</type>
                                            <conffile>true</conffile>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/etc/SBB/${project.artifactId}</prefix>
                                                <user>${project.artifactId}</user>
                                                <group>${project.artifactId}</group>
                                                <filemode>644</filemode>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>
                                                ${project.build.directory}/classes/application-test.yml
                                            </src>
                                            <type>file</type>
                                            <conffile>true</conffile>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/etc/SBB/${project.artifactId}</prefix>
                                                <user>${project.artifactId}</user>
                                                <group>${project.artifactId}</group>
                                                <filemode>644</filemode>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>${project.build.directory}/classes/logback-spring.xml
                                            </src>
                                            <type>file</type>
                                            <conffile>true</conffile>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/etc/SBB/${project.artifactId}</prefix>
                                                <user>${project.artifactId}</user>
                                                <group>${project.artifactId}</group>
                                                <filemode>644</filemode>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>
                                                ${basedir}/src/deb/files/${project.artifactId}.conf
                                            </src>
                                            <type>file</type>
                                            <conffile>true</conffile>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/etc/SBB/${project.artifactId}</prefix>
                                                <user>${project.artifactId}</user>
                                                <group>${project.artifactId}</group>
                                                <filemode>644</filemode>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>
                                                ${basedir}/src/deb/files/${project.artifactId}.logrotate
                                            </src>
                                            <type>file</type>
                                            <conffile>true</conffile>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/etc/logrotate.d</prefix>
                                                <user>root</user>
                                                <group>root</group>
                                                <filemode>644</filemode>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>
                                                ${basedir}/src/deb/files/${project.artifactId}-tmpfiles.conf
                                            </src>
                                            <type>file</type>
                                            <conffile>true</conffile>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/etc/tmpfiles.d</prefix>
                                                <user>root</user>
                                                <group>root</group>
                                                <filemode>644</filemode>
                                            </mapper>
                                        </data>
                                        <data>
                                            <type>link</type>
                                            <symlink>true</symlink>
                                            <linkName>/etc/init.d/${project.artifactId}</linkName>
                                            <linkTarget>
                                                /usr/local/SBB/usr/local/${project.artifactId}/${project.build.finalName}.war
                                            </linkTarget>
                                        </data>
                                        <data>
                                            <type>link</type>
                                            <symlink>true</symlink>
                                            <linkName>
                                                /usr/local/SBB/usr/local/${project.artifactId}/${project.build.finalName}.conf
                                            </linkName>
                                            <linkTarget>
                                                /etc/SBB/${project.artifactId}/${project.artifactId}.conf
                                            </linkTarget>
                                        </data>
                                        <data>
                                            <type>link</type>
                                            <symlink>true</symlink>
                                            <linkName>
                                                /usr/local/SBB/usr/local/${project.artifactId}/application.yml
                                            </linkName>
                                            <linkTarget>
                                                /etc/SBB/${project.artifactId}/application.yml
                                            </linkTarget>
                                        </data>
                                        <data>
                                            <type>link</type>
                                            <symlink>true</symlink>
                                            <linkName>
                                                /usr/local/SBB/usr/local/${project.artifactId}/application-dev.yml
                                            </linkName>
                                            <linkTarget>
                                                /etc/SBB/${project.artifactId}/application-dev.yml
                                            </linkTarget>
                                        </data>
                                        <data>
                                            <type>link</type>
                                            <symlink>true</symlink>
                                            <linkName>
                                                /usr/local/SBB/usr/local/${project.artifactId}/application-prod.yml
                                            </linkName>
                                            <linkTarget>
                                                /etc/SBB/${project.artifactId}/application-prod.yml
                                            </linkTarget>
                                        </data>
                                        <data>
                                            <type>link</type>
                                            <symlink>true</symlink>
                                            <linkName>
                                                /usr/local/SBB/usr/local/${project.artifactId}/application-stage.yml
                                            </linkName>
                                            <linkTarget>
                                                /etc/SBB/${project.artifactId}/application-stage.yml
                                            </linkTarget>
                                        </data>
                                        <data>
                                            <type>link</type>
                                            <symlink>true</symlink>
                                            <linkName>
                                                /usr/local/SBB/usr/local/${project.artifactId}/application-test.yml
                                            </linkName>
                                            <linkTarget>
                                                /etc/SBB/${project.artifactId}/application-test.yml
                                            </linkTarget>
                                        </data>
                                        <data>
                                            <type>link</type>
                                            <symlink>true</symlink>
                                            <linkName>
                                                /usr/local/SBB/usr/local/${project.artifactId}/logback-spring.xml
                                            </linkName>
                                            <linkTarget>/etc/SBB/${project.artifactId}/logback-spring.xml
                                            </linkTarget>
                                        </data>
                                        <data>
                                            <type>link</type>
                                            <symlink>true</symlink>
                                            <linkName>
                                                /etc/SBB/${project.artifactId}/${project.artifactId}.logrotate
                                            </linkName>
                                            <linkTarget>
                                                /etc/logrotate.d/${project.artifactId}.logrotate
                                            </linkTarget>
                                        </data>
                                        <data>
                                            <type>link</type>
                                            <symlink>true</symlink>
                                            <linkName>
                                                /etc/SBB/${project.artifactId}/${project.artifactId}-tmpfiles.conf
                                            </linkName>
                                            <linkTarget>
                                                /etc/tmpfiles.d/${project.artifactId}-tmpfiles.conf
                                            </linkTarget>
                                        </data>
                                        <data>
                                            <type>link</type>
                                            <symlink>true</symlink>
                                            <linkName>/var/log/SBB/${project.artifactId}</linkName>
                                            <linkTarget>/data/log/${project.artifactId}</linkTarget>
                                        </data>
                                    </dataSet>
                                </configuration>
                            </execution>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>jdeb</goal>
                                </goals>
                                <id>${project.artifactId}-all</id>
                                <configuration>
                                    <name>Staatsbibliothek zu Berlin - ${project.artifactId}</name>
                                    <classifier>all</classifier>
                                    <controlDir>
                                        ${project.basedir}/src/deb/${project.artifactId}-all-metapackage
                                    </controlDir>
                                    <deb>
                                        ${project.build.directory}/${project.artifactId}-all_${project.version}_all.deb
                                    </deb>
                                    <snapshotExpand>true</snapshotExpand>
                                    <!--suppress MavenModelInspection -->
                                    <signPackage>${sign.package}</signPackage>
                                    <signMethod>dpkg-sig</signMethod>
                                    <signRole>builder</signRole>
                                    <dataSet>
                                        <data>
                                            <type>template</type>
                                            <paths>
                                                <path>/var/run/${project.artifactId}-all</path>
                                            </paths>
                                        </data>
                                    </dataSet>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>netty-resolver-dns-native-macos-aarch64</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-resolver-dns-native-macos</artifactId>
                    <classifier>osx-aarch_64</classifier>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
        <!-- used for building and starting a docker image of the service and run the integration tests against it, currently disabled -->
    </profiles>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/integration-test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <mainClass>
                                de.staatsbibliothek.berlin.hsp.fo.discovery.HspFoDiscoveryApplication
                            </mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>nexus3-releases</id>
            <url>https://artefakt.dev.sbb.berlin/repository/sbb-maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>nexus3-snapshots</id>
            <url>https://artefakt.dev.sbb.berlin/repository/sbb-maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

</project>
